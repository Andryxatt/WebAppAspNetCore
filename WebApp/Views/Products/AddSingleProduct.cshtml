@model WebApp.Models.SingleProduct
@using WebApp.Models
@{
    ViewData["Title"] = "AddSingleProduct";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="col-md-4 mt-3">
    <div class="card">
        <div class="card-header">
            @ViewBag.product.Model
            <br>
            Price - @ViewBag.product.PriceBy $
        </div>

        <div class="card-body w3-content w3-display-container">

            @if (ViewBag.product.Photos != null)
            {
                @foreach (var item in ViewBag.product.Photos)
                {
                    <img style="width:100%" src="@Url.Content(item.Path)">
                }
            }

        </div>
    </div>
</div>

<form asp-action="AddSingleProduct" asp-controller="Products" method="post">
    <div class="input-group">
        <div class="input-group-prepend">
            <span class="input-group-text">$</span>
        </div>
        <input type="text" asp-for="PriceSale" value="@ViewBag.product.PriceBy" class="form-control">
        <div class="input-group-append">
            <span class="input-group-text">.00</span>
        </div>
    </div>
    <div id="sizes-list">
        <div class="form-group size-group">
            <input type="text" class="SizeInput" id="size-1" name="sizesId[]"/>
            <input type="number" name="countSizes[]" value="0" />
        </div>
    </div>
    <button id="add-size" class="add-size">Add Size</button>
    <button type="submit" class="btn btn-success">Save</button>
</form>
@section scripts{
   
    <script type="text/javascript">
        $(document).ready(function () {
            $(".SizeInput").on("focus", function () {
                $(this).autocomplete({
                    source: function (request, response) {
                        $.ajax({
                            url: '/Sizes/GetSizes/',
                            data: { "prefix": request.term },
                            type: "POST",
                            dataType: "json",
                            success: function (data) {
                                response($.map(data, function (item) {
                                    return { label: item.label, value: item.label };
                                }))
                            },
                            error: function (response) {
                                alert(response.responseText);
                            },
                            failure: function (response) {
                                alert(response.responseText);
                            }
                        });
                    },
                    minLength: 1
                });
            });
        )};
        $(document).ready(function () {
            var max_fields = 10;
            var wrapper = $("#sizes-list");
            var add_button = $(".add-size");

            var x = 1;
            $(add_button).click(function (e) {
                e.preventDefault();
                if (x < max_fields) {
                    x++;
                    $(wrapper).append('<div class="form-group size-group"><input type="text" class="SizeInput" name="mytext[]"/> <input type="number" name="countSizes[]" value="0" /><a href="#" class="delete">Delete</a></div>'); //add input box
                } else {
                    alert('You Reached the limits')
                }
            });

            $(wrapper).on("click", ".delete", function (e) {
                e.preventDefault();
                $(this).parent('div').remove();
                x--;
            })
        });


        document.forms[0].onsubmit = () => {
            let formData = new FormData(document.forms[0]);
            fetch('', {
                method: 'post',
                body: new URLSearchParams(formData)
            })
                .then(() => {
                    alert('Posted using Fetch');
                });
            return false;
        };
    </script>
}